% function that returns weibel symmetric tree and yeh data
function [diameter, branch_length, branching_angle, gravity_angle, generations] = james_symmetric_data()

gen_ratio = 0.8;
bif_angle = 45;
d_start = 2.0;
l_start = 6.5;

generations = 0:4;
diameter = d_start*gen_ratio.^generations;          % cm
branch_length = l_start*gen_ratio.^generations;     % cm

%yeh 1980 angles
branching_angle = bif_angle*ones(1,length(generations));

% need a way to calculate the average angle to gravity of each pipe
% can't think of anything except doing it separately for each generation
gravity_angle = zeros(1,length(generations));

gravity_angle(1) = 0;   % trachea
gravity_angles_previous = 0;    % the trachea
for i=generations(2:end)
    gravity_angles = zeros(2.^generations(i),1);
    
    %loop over the gravity_angles_previous and populate gravity_angles
    for j=1:length(gravity_angles_previous)
        gravity_angles(2*j - 1) = gravity_angles_previous(j)+1;
        gravity_angles(2*j) = gravity_angles_previous(j)-1;
    end
    
    % save the integer values before calculating the actual angles and
    % periodicity
    gravity_angles_previous = gravity_angles;
    
    % calculate actual angle
    gravity_angles = gravity_angles * bif_angle;
    
    % remove periodicity, the function will correctly handle negative
    % angles and give them positive values
    gravity_angles = mod(gravity_angles,180);
    
    % to get the angle to gravity, mod 180 
    % and then is angle > 90, angle = 180 - angle
    gravity_angles = mod(gravity_angles,pi);
    gravity_angles(gravity_angles>(pi/2.)) = 180 - gravity_angles(gravity_angles>(pi/2.))
    
    % average gravity angle
    gravity_angle(i) = mean(gravity_angles)
end

%pi/180*[0 33 34 22 20 18 19 22 28 22 33 34 37 39 39 51 45 45 45 45 45 45 45 45];
%gravity_angle =   pi/180*[0 20 31 43 39 39 40 36 39 45 43 45 45 60 60 60 60 60 60 60 60 60 60 60];
   

end