###############################################################################
# libMesh's Make.common.@METHOD@ file defines exactly that -
# common Make variables and flags used to build the library on a particular
# system in the requested build method.
###############################################################################


###############################################################################
# Please note:
#   The ./configure script generates Make.common.@METHOD@ from 
#   Make.common.in, so if you want to change something,
#   then do it in the latter file (here!) and re-run
#   ./configure in the top level directory
###############################################################################

#############################################################################
# Certain PETSc's define DESTDIR or SHELL - which can be very, very
# bad for us.  Of course we are asking for it by including their
# Makefile variables here.  Guard against that.
libmesh_save_DESTDIR := $(DESTDIR)
libmesh_save_SHELL := $(SHELL)

#############################################################################
# top-level source dir.  This is set by automake for internal builds, otherwise
# it gets set to the installation prefix
top_srcdir ?= @prefix@

###############################################################################
# the following lines will be replaced by the output 
# of ./configure
hosttype             = @host@
hostos               = @host_os@

libmesh_CXX          = @CXX@
libmesh_CC           = @CC@
libmesh_F77          = @F77@
libmesh_F90          = @FC@
libmesh_LDFLAGS      = @LDFLAGS@
libmesh_LIBS         = @LIBS@
libmesh_FLIBS        = @FLIBS@
libmesh_FFLAGS       = @FFLAGS@
GXX-VERSION          = @GXX_VERSION@
libmesh_RPATHFLAG    = @RPATHFLAG@
NODEPRECATEDFLAG     = @NODEPRECATEDFLAG@

# Complex variable support
enable-complex       = @enablecomplex@

# Petsc iterative solvers for parallel and uniprocessor
# applications
enable-petsc         = @enablepetsc@
petsc-version        = @petscversion@
petsc-major          = @petscmajor@
petsc-major-minor    = @petscmajorminor@
PETSC_ARCH           = @PETSC_ARCH@
PETSC_DIR            = @PETSC_DIR@

# Slepc for eigen value analysis
enable-slepc         = @enableslepc@
SLEPC_DIR            = @SLEPC_DIR@

# MPI configuration
# (only explicitly defined when PETSc is absent, otherwise snooped from PETSc)
MPI_IMPL             = @MPI_IMPL@
MPI_INCLUDE          = @MPI_INCLUDES_PATHS@
MPI_LIB              = @MPI_LIBS_PATHS@ @MPI_LIBS@

# Boost Configuration - currently using header-only libraries
libmesh_INCLUDE += @BOOST_CPPFLAGS@
#libmesh_LIBS     += @BOOST_LDFLAGS@

# Doxygen for generating documentation
doxygen		     = @DOXYGEN@

# Perl for making .depend
perl                 = @PERL@

# Flag for optional packages
enable-optional      = @enableoptional@
###############################################################################


###############################################################################
libmesh_CPPFLAGS := @CPPFLAGS_METHOD@
libmesh_CXXFLAGS := @CXXFLAGS_METHOD@
libmesh_CFLAGS   := @CFLAGS_METHOD@



###############################################################################
# now configuration for package includes, libraries, etc...

#
# The include directories for libMesh
#    note that include/contrib only lives in installed trees
libmesh_INCLUDE += -I$(top_srcdir)/include

ifeq (@enablelegacyincludepaths@,yes)
  libmesh_INCLUDE += -I$(top_srcdir)/include/libmesh
endif

#
# Optional packages
ifeq ($(enable-optional),yes)
  libmesh_INCLUDE += @libmesh_optional_INCLUDES@
  libmesh_LIBS    += @libmesh_optional_LIBS@

  #############################################################################
  # SLEPc
  ifeq ($(enable-slepc),yes)
    # The configure script checks that only corresponding
    # versions of PETSc and SLEPc can be used. Hence,
    # petsc-major-minor is also used to identify the SLEPc version 
    ifeq ($(petsc-major-minor),2.3.x)  # 2.3.x style
      -include $(SLEPC_DIR)/bmake/$(PETSC_ARCH)/slepcconf
    else
          ifeq ($(petsc-major),3)  # 3.0.x & newer style
            ifeq ($(petsc-major-minor),3.0.x)
              -include ${SLEPC_DIR}/conf/slepc_common_variables
            else ifeq ($(petsc-major-minor),3.1.x)
              -include ${SLEPC_DIR}/conf/slepc_common_variables
            else   # 3.2.x & newer style
              -include ${SLEPC_DIR}/conf/slepc_variables
            endif
          else
            -include $(SLEPC_DIR)/bmake/$(PETSC_ARCH)/packages
          endif
    endif       

    libmesh_INCLUDE += -I$(SLEPC_DIR)/include -I$(SLEPC_DIR)/$(PETSC_ARCH)/include

    libs-SLEPC = $(SLEPC_LIB)

    libmesh_LIBS += $(libs-SLEPC) $(ARPACK_LIB)

  endif #end ifeq ($(enable-slepc),yes)

  # MPI configuration when Petsc is absent
  libmesh_LIBS    += $(MPI_LIB)
  libmesh_INCLUDE += $(MPI_INCLUDE)

endif # End of disable-optional test


# # Finally, Append the linker flags to the libraries
# libmesh_LIBS += $(libmesh_LDFLAGS)


###############################################################################



# Restore our variables.  Really, FIXME: Don't include strangers Makefiles!
DESTDIR=$(libmesh_save_DESTDIR)
SHELL=$(libmesh_save_SHELL)



###############################################################################
# Examples-related common variables
#
examples_source_path=$(top_srcdir)/examples
examples_install_path=$(prefix)/examples



###############################################################################
#
# 
#
.PHONY: echo echo_cxx echo_cc echo_cppflags echo_cxxflags echo_cflags echo_include echo_ldflags

#
# Useful for checking make rules
#
echo:
	@echo "C++ compiler:"
	@echo "$(libmesh_CXX)"
	@echo
	@echo "libmesh_CPPFLAGS:"
	@echo "$(libmesh_CPPFLAGS)"
	@echo
	@echo "libmesh_CFLAGS:"
	@echo "$(libmesh_CFLAGS)"
	@echo
	@echo "libmesh_CXXFLAGS:"
	@echo "$(libmesh_CXXFLAGS)"
	@echo
	@echo "libmesh_INCLUDE:"
	@echo "$(libmesh_INCLUDE)"
	@echo
	@echo "libmesh_LIBS:"
	@echo "$(libmesh_LIBS)"
	@echo
	@echo "libmesh_LDFLAGS:"
	@echo "$(libmesh_LDFLAGS)"
	@echo

#
# Print the name of the C++ compiler, padded with whitespace
#
echo_cxx:
	@echo  " " $(libmesh_CXX) " "

#
# Print the name of the C compiler, padded with whitespace
#
echo_cc:
	@echo  " " $(libmesh_CC) " "

#
# Print the flags used for the C preprocessor, padded with whitespace
#
echo_cppflags:
	@echo " " $(libmesh_CPPFLAGS) " "

#
# Print the flags used for C++ compilation, padded with whitespace
#
echo_cxxflags:
	@echo " " $(libmesh_CXXFLAGS) " "

#
# Print the flags used for C compilation, padded with whitespace
#
echo_cflags:
	@echo " " $(libmesh_CFLAGS) " "

#
# Print C++ compiler include path, padded with whitespace
#
echo_include:
	@echo " " $(libmesh_INCLUDE) " "

#
# Print the flags used to link, padded with whitespace
#
echo_ldflags:
	@echo " " $(libmesh_LIBS) $(libmesh_LDFLAGS) " "


# Local Variables:
# mode: makefile
# End:
